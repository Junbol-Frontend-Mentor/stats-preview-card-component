// Importing Google Fonts
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Lexend+Deca:wght@100..900&display=swa');

//------GENERAL SETTINGS -------------------------------

// Universal reset also explicitly to all pseudo-elements
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body,
section,
header {
  padding: 0;
  margin: 0;
}

// Define color variables
$colors: (
  //-------- PRIMARY ----------------------------
  'very-dark-blue': hsl(233, 47%, 7%),
  'dark-desaturate': hsl(244, 38%, 16%),
  'soft-violet': hsl(290, 90%, 69%),
  //-------- NEUTRAL ----------------------------
  'slightly-transparent-white-main-paragraph': hsla(0, 0%, 100%, 0.75),
  'slightly-transparent-white-stat-heading': hsla(0, 0%, 100%, 0.6),
  //--------STANDARD ---------------------------
  'white': hsl(0, 0%, 100%),
  'purple-transp': hsla(276, 77%, 7%, 0.2),
  'grey': hsl(0, 0%, 50%),
  'black': hsl(0, 0%, 0%),
  'black-transp': hsla(0, 0%, 0%, 0.6),
  'warning-red': hsl(0, 100%, 50%),
  'warning-dark-red': hsl(0, 94%, 41%),
  'green': hsl(103, 99%, 31%)
);

// Defining gradient variables separately
$gradientOne: linear-gradient(135deg, hsl(0, 0%, 100%), hsl(0, 100%, 98%));

// Function to retrieve colors
@function color($color-name) {
  @return map-get($colors, $color-name);
}

// Typography Mixin with parameters
@mixin typography($font-family: 'Inter', $weight, $size, $line-height, $color) {
  font-family: $font-family; // ‚úÖ Fixed: Correctly use the parameter
  font-weight: $weight;
  font-size: $size;
  line-height: $line-height;
  color: $color;
}

// Mobile-first styles
html,
body {
  width: 100vw;
  display: flex;
  flex-direction: column;
  min-height: 100vh; // This ensures that the total height is at least the height of the viewport
  justify-content: center;
  z-index: 0;
  background-color: color('very-dark-blue');
}

//============= MAIN ====================================

main {
  width: 100%;
  flex: 1 0 auto; /* This allows the main content to grow and shrink but not shrink smaller than its content */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 1.5rem;
  background-image: url('../assets/images/pattern-background-mobile.svg');
  background-repeat: no-repeat;
  background-size: contain; //üö© with contain I managed to put the curve in the right location not with "cover"
}

.cardContainer {
  width: 100%;
  display: flex;
  flex-direction: column;
  position: relative;
  align-items: center;
  border-radius: 15px;
  margin: 0 auto;
  margin-bottom: 2rem;
  box-shadow: 0 10px 10px rgba(0, 0, 0, 0.4);
  background-color: color('dark-desaturate');
 //background-color: indigo;

  &__mainContent {
    width: 90%;
    display: flex;
    flex-direction: column;
    //background-color: cadetblue;
  }

  &__heroImage {
    width: 100%;
    height: 17rem;
    order: -1; // ‚úÖ Changed order for mobile view
    border-radius: 15px 15px 0px 0px;
    background-image: url('../assets/images/image-header-mobile.jpg');
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    margin-bottom: 2rem;
    background-color: color('soft-violet');
    background-blend-mode: multiply;
  }

  &__intro {
    width: 85%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    text-align: center;
    margin: 0 auto;
    margin-bottom: 3rem;
    padding: 2rem;
    //background-color: blue;
    h1 {
      @include typography('Inter', 700, 2.5rem, 1.5, color('white'));
      margin-bottom: 1rem;
      span {
        color: color('soft-violet');
      }
    }
    p {
      @include typography('Inter', 300, 1rem, 1.5, color('slightly-transparent-white-stat-heading'));
    }
  }
}

.dataContainer {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0 auto;
  margin-bottom: 2rem;
  //background-color: brown;

  &__dataGrp {
    width: 8rem;
    height: 3rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 1rem;
  }

  &__amount {
    width: 10rem;
    height: 3rem;
    display: flex;
    justify-content: center;
    @include typography('Inter', 600, 1.2rem, 1.5, color('white'));
  }

  &__titleUnder {
    width: 10rem;
    height: 3rem;
    display: flex;
    justify-content: center;
    @include typography('Inter', 200, 0.8rem, 1.5, color('slightly-transparent-white-stat-heading'));
  }
}

//------ FOOTER ----------------

.attribution {
  width: 100%;
  height: 4rem;
  display: flex;
  justify-content: center;
  padding: 0.5rem;
  margin: 0 auto;
  text-align: center;
  margin-bottom: 3rem;
  color: color('grey');
}

.attribution a {
  color: color('white');
  text-decoration: none;
}

//------ MEDIA QUERY FOR DESKTOPS AND TABLETS ----------------

@media (min-width: 768px) {
  .cardContainer {
    max-width: 55rem; // ‚úÖ Adjusted max-width for desktop view
    height: 30rem;// üö© to fix the issue of the heroImage to be able to use height: 100% I had to use height not min-height
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    margin: 0 auto;
    margin-bottom: 2rem;
    box-shadow: 0 10px 10px rgba(0, 0, 0, 0.4);
    background-color: color('dark-desaturate');

    &__mainContent {
      width: 30rem;
      display: flex;
      flex-direction: column;
    }

    &__heroImage {
      width: 46%; // ‚úÖ Adjusted width for desktop view
      height: 100%;//‚ùì I dont understand why ths worked
      order: 1;
      border-radius: 0 15px 15px 0;
      margin-bottom: 0rem;
    }
  }
  .dataContainer {
    width: 100%;
    display: flex;
    justify-content: space-around;
    flex-direction: row;
    margin: 0 auto;
    margin-bottom: 2rem;
  }
}
